
NOTE:
The module -- gcc/11.1.0 -- has been deprecated and will be removed during our next maintenance in May, 2023.
A list of supported versions is available via the 'module avail' command. Please email crcsupport@nd.edu with questions or concerns.
2023-02-02 13:52:56.479383: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-02-02 13:55:50.925850: W tensorflow/core/framework/cpu_allocator_impl.cc:82] Allocation of 9224000000 exceeds 10% of free system memory.
2023-02-02 13:55:51.885864: W tensorflow/core/framework/cpu_allocator_impl.cc:82] Allocation of 9224000000 exceeds 10% of free system memory.
2023-02-02 13:55:53.206552: W tensorflow/core/framework/cpu_allocator_impl.cc:82] Allocation of 9224000000 exceeds 10% of free system memory.
2023-02-02 13:55:53.758104: W tensorflow/core/framework/cpu_allocator_impl.cc:82] Allocation of 9224000000 exceeds 10% of free system memory.
2023-02-02 13:55:55.833303: W tensorflow/core/framework/cpu_allocator_impl.cc:82] Allocation of 9224000000 exceeds 10% of free system memory.
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
<IPython.core.display.HTML object>
The average density difference between Cassandra and GROMACS is 7.987344543493535 kg/m^3
The minimum density difference between Cassandra and GROMACS is -4.233404523004538 kg/m^3
The maximum density difference between Cassandra and GROMACS is 41.73639153545929 kg/m^3
Include properties: sim_liq_density
Property bounds are [310.5  394.04]
Initialize all errors!
Trying temp 130 and density 394.04
Trying temp 140 and density 376.87
Trying temp 150 and density 357.9
Trying temp 160 and density 336.31
Trying temp 170 and density 310.5
MSE is [301817.63645321   1068.21334155  44202.8843937  ... 103346.68995762
  49846.1741036   96006.34904874]
Ranking samples complete!
There are: 21919 viable parameter sets which are within 25 kg/m$^3$ of GROMACS liquid densities
Include properties: sim_liq_density
Property bounds are [310.5  394.04]
Initialize all errors!
Trying temp 130 and density 394.04
Trying temp 140 and density 376.87
Trying temp 150 and density 357.9
Trying temp 160 and density 336.31
Trying temp 170 and density 310.5
MSE is [173.1995124  149.60849631 657.00947129 ... 626.66289582 641.12441834
 430.02942707]
Include properties: sim_vap_density
Property bounds are [ 5.9804 38.974 ]
Initialize all errors!
Trying temp 130 and density 5.9804
Trying temp 140 and density 10.152
Trying temp 150 and density 16.328
Trying temp 160 and density 25.382
Trying temp 170 and density 38.974
MSE is [8.91971322e-01 4.71362820e-01 1.62510895e+02 ... 1.15429323e+03
 6.30542733e-01 1.41813957e+01]
Include properties: sim_Pvap
Property bounds are [ 3.6732 23.283 ]
Initialize all errors!
Trying temp 130 and density 3.6732
Trying temp 140 and density 6.4117999999999995
Trying temp 150 and density 10.4
Trying temp 160 and density 15.921
Trying temp 170 and density 23.283
MSE is [4.97790416e-01 3.35132707e-01 4.13871415e+01 ... 3.48995616e+02
 5.52330324e-02 5.37681048e+00]
Include properties: sim_Hvap
Property bounds are [320.3   472.041]
Initialize all errors!
Trying temp 130 and density 472.041
Trying temp 140 and density 445.14
Trying temp 150 and density 412.59
Trying temp 160 and density 372.27
Trying temp 170 and density 320.3
MSE is [ 1957.48409092  1743.10990937 12644.09987315 ... 22710.60821172
  1439.32938803   263.95779471]
Completed calculating other properties!
